# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_view.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_SSongPluto(QtWidgets.QMainWindow):
    def __init__(self, _parent=None):
        super(Ui_SSongPluto, self).__init__(_parent)
        self.style_component = {'background_color': '#333333',
                                'border_color': '#595959',
                                'font_color':'#D9D9D9',
                                'font_color_pressed': '#595959',
                                'button_color': 'rgba(70,70,70,0.5)'}



    def setupUi(self):
        self.setObjectName("SSongPluto")
        self.resize(735, 530)
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.SP_main_vl = QtWidgets.QVBoxLayout()
        self.SP_main_vl.setObjectName("SP_main_vl")
        self.SP_root_dir_hl = QtWidgets.QHBoxLayout()
        self.SP_root_dir_hl.setObjectName("SP_root_dir_hl")
        self.SP_root_dir_btn = QtWidgets.QPushButton(self.centralwidget)
        self.SP_root_dir_btn.setObjectName("SP_root_dir_btn")
        self.SP_root_dir_hl.addWidget(self.SP_root_dir_btn)

        self.SP_root_dir_lb = QtWidgets.QLabel(self.centralwidget)
        self.SP_root_dir_lb.setObjectName("SP_root_dir_lb")
        self.change_file_label_color('red')
        self.SP_root_dir_hl.addWidget(self.SP_root_dir_lb)


        self.SP_root_dir_hl.setStretch(0, 1)
        self.SP_root_dir_hl.setStretch(1, 10)
        self.SP_main_vl.addLayout(self.SP_root_dir_hl)
        self.SP_info_hl = QtWidgets.QHBoxLayout()
        self.SP_info_hl.setObjectName("SP_info_hl")
        self.SP_info_prj_lw = QtWidgets.QListWidget(self.centralwidget)
        self.SP_info_prj_lw.setObjectName("SP_info_prj_lw")
        self.SP_info_hl.addWidget(self.SP_info_prj_lw)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.SP_info_hl.addWidget(self.line)
        self.SP_info_desc_te = QtWidgets.QTextEdit(self.centralwidget)
        self.SP_info_desc_te.setObjectName("SP_info_desc_te")
        self.SP_info_hl.addWidget(self.SP_info_desc_te)
        self.SP_info_hl.setStretch(0, 1)
        self.SP_info_hl.setStretch(1, 1)
        self.SP_info_hl.setStretch(2, 1)
        self.SP_main_vl.addLayout(self.SP_info_hl)
        self.SP_btn_list_hl = QtWidgets.QHBoxLayout()
        self.SP_btn_list_hl.setObjectName("SP_btn_list_hl")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.SP_btn_list_hl.addItem(spacerItem)
        self.SP_create_prj_btn = QtWidgets.QPushButton(self.centralwidget)
        self.SP_create_prj_btn.setObjectName("SP_create_prj_btn")
        self.SP_btn_list_hl.addWidget(self.SP_create_prj_btn)
        self.SP_open_btn = QtWidgets.QPushButton(self.centralwidget)
        self.SP_open_btn.setObjectName("SP_open_btn")
        self.SP_btn_list_hl.addWidget(self.SP_open_btn)
        self.SP_btn_list_hl.setStretch(0, 10)
        self.SP_btn_list_hl.setStretch(1, 1)
        self.SP_btn_list_hl.setStretch(2, 1)
        self.SP_main_vl.addLayout(self.SP_btn_list_hl)
        self.SP_main_vl.setStretch(0, 1)
        self.SP_main_vl.setStretch(1, 10)
        self.SP_main_vl.setStretch(2, 1)
        self.verticalLayout_2.addLayout(self.SP_main_vl)
        self.setCentralWidget(self.centralwidget)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("SSongPluto", "SSongPluto"))
        self.SP_root_dir_btn.setText(_translate("SSongPluto", "PushButton"))
        self.SP_root_dir_lb.setText(_translate("SSongPluto", "TextLabel"))
        self.SP_create_prj_btn.setText(_translate("SSongPluto", "PushButton"))
        self.SP_open_btn.setText(_translate("SSongPluto", "PushButton"))


    def change_file_label_color(self, target_color):
        '''change file_label widget color in ui_scene_manager.py
        string type input : green , yellow, red, default '''
        green="114, 255, 145"
        yellow= "252, 196, 75"
        red=" 251, 79, 73"
        transparent="0.1"
        opacity="0.9"
        if target_color == "green":
            self.SP_root_dir_lb.setStyleSheet("QLabel{"+\
                                        "border-style: solid;"+\
                                        "border-width : 0.5px;"+\
                                        "border-color: rgba("+green+","+ opacity+");"+\
                                        "border-radius: 2px;"+\
                                        "color :"+ self.style_component['font_color'] +";"+\
                                        "background:rgba("+green+","+ transparent+");"+\
                                        "font: bold 11px;"+\
                                        "padding-left: 3px;"+\
                                        "}")
        elif target_color == "yellow":
            self.SP_root_dir_lb.setStyleSheet("QLabel{"+\
                                        "border-style: solid;"+\
                                        "border-width : 0.5px;"+\
                                        "border-color: rgba("+yellow+","+ opacity+");"+\
                                        "border-radius: 2px;"+\
                                        "color :"+ self.style_component['font_color'] +";"+\
                                        "background:rgba("+yellow+","+ transparent+");"+\
                                        "font: bold 11px;"+\
                                        "padding-left: 3px;"+\
                                        "}")
        elif target_color == "red":
            self.SP_root_dir_lb.setStyleSheet("QLabel{"+\
                                        "border-style: solid;"+\
                                        "border-width : 0.5px;"+\
                                        "border-color:rgba("+red+","+ opacity+");"+\
                                        "border-radius: 2px;"+\
                                        "color :"+ self.style_component['font_color'] +";"+\
                                        "background:rgba("+red+","+ transparent+");"+\
                                        "font: bold 11px;"+\
                                        "padding-left: 3px;"+\
                                        "}")
        elif target_color == "default":
            self.SP_root_dir_lb.setStyleSheet("QLabel{"+\
                                        "border-style: solid;"+\
                                        "border-width : 0.5px;"+\
                                        "border-color: "+ self.style_component['border_color'] +";"+\
                                        "border-radius: 2px;"+\
                                        "color :"+ self.style_component['font_color'] +";"+\
                                        "background:"+self.style_component['background_color']+";"+\
                                        "font: bold 11px;"+\
                                        "padding-left: 3px;"+\
                                        "}")



    def get_selectedpath(self):
        _file = str(QtWidgets.QFileDialog.getExistingDirectory(self, "Select Directory"))
        return _file

    def set_root_lb(self, _path):
        self.SP_root_dir_lb.setText(_path)





if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    SSongPluto = QtWidgets.QMainWindow()
    ui = Ui_SSongPluto()
    ui.setupUi(SSongPluto)
    SSongPluto.show()
    sys.exit(app.exec_())
